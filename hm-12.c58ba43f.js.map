{"mappings":"ACAA,MAAM,eACJ,YAAY,CAAE,SAAA,CAAQ,CAAE,WAAA,CAAU,CAAE,CAAE,CACpC,IAAI,CAAC,UAAU,CAAG,EAClB,IAAI,CAAC,YAAY,CAAG,SAAS,aAAa,CAAC,GAC3C,IAAI,CAAC,WAAW,CAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,uBACnD,IAAI,CAAC,YAAY,CAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,wBACpD,IAAI,CAAC,cAAc,CAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,uBACtD,IAAI,CAAC,cAAc,CAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,uBACtD,IAAI,CAAC,KAAK,EACZ,CAEA,OAAQ,CACN,IAAI,CAAC,MAAM,GACX,IAAI,CAAC,UAAU,CAAG,YAAY,IAAM,IAAI,CAAC,MAAM,GAAI,IACrD,CAEA,QAAS,CACP,IAAM,EAAM,IAAI,KACV,EAAO,IAAI,CAAC,UAAU,CAAG,EAE/B,GAAI,GAAQ,EAAG,CACb,cAAc,IAAI,CAAC,UAAU,EAC7B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAG,IAC/B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAG,KAChC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAG,KAClC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAG,KAClC,MACF,CAEA,IAAM,EAAO,KAAK,KAAK,CAAC,EAAQ,OAC1B,EAAQ,KAAK,KAAK,CAAE,EAAQ,MAAyB,MACrD,EAAU,KAAK,KAAK,CAAE,EAAQ,KAAoB,KAClD,EAAU,KAAK,KAAK,CAAE,EAAQ,IAAc,IAElD,CAAA,IAAI,CAAC,WAAW,CAAC,WAAW,CAAG,EAC/B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAG,OAAO,GAAO,QAAQ,CAAC,EAAG,KAC1D,IAAI,CAAC,cAAc,CAAC,WAAW,CAAG,OAAO,GAAS,QAAQ,CAAC,EAAG,KAC9D,IAAI,CAAC,cAAc,CAAC,WAAW,CAAG,OAAO,GAAS,QAAQ,CAAC,EAAG,IAChE,CACF,CAEA,IAAI,eAAe,CACjB,SAAU,WACV,WAAY,IAAI,KAAK,eACvB","sources":["<anon>","src/index.js"],"sourcesContent":["class CountdownTimer {\n    constructor({ selector, targetDate }){\n        this.targetDate = targetDate;\n        this.timerElement = document.querySelector(selector);\n        this.daysElement = this.timerElement.querySelector('[data-value=\"days\"]');\n        this.hoursElement = this.timerElement.querySelector('[data-value=\"hours\"]');\n        this.minutesElement = this.timerElement.querySelector('[data-value=\"mins\"]');\n        this.secondsElement = this.timerElement.querySelector('[data-value=\"secs\"]');\n        this.start();\n    }\n    start() {\n        this.update();\n        this.intervalId = setInterval(()=>this.update(), 1000);\n    }\n    update() {\n        const now = new Date();\n        const time = this.targetDate - now;\n        if (time <= 0) {\n            clearInterval(this.intervalId);\n            this.daysElement.textContent = '0';\n            this.hoursElement.textContent = '00';\n            this.minutesElement.textContent = '00';\n            this.secondsElement.textContent = '00';\n            return;\n        }\n        const days = Math.floor(time / 86400000);\n        const hours = Math.floor(time % 86400000 / 3600000);\n        const minutes = Math.floor(time % 3600000 / 60000);\n        const seconds = Math.floor(time % 60000 / 1000);\n        this.daysElement.textContent = days;\n        this.hoursElement.textContent = String(hours).padStart(2, '0');\n        this.minutesElement.textContent = String(minutes).padStart(2, '0');\n        this.secondsElement.textContent = String(seconds).padStart(2, '0');\n    }\n}\nnew CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Jul 17, 2025')\n});\n\n//# sourceMappingURL=hm-12.c58ba43f.js.map\n","class CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.targetDate = targetDate;\n    this.timerElement = document.querySelector(selector);\n    this.daysElement = this.timerElement.querySelector('[data-value=\"days\"]');\n    this.hoursElement = this.timerElement.querySelector('[data-value=\"hours\"]');\n    this.minutesElement = this.timerElement.querySelector('[data-value=\"mins\"]');\n    this.secondsElement = this.timerElement.querySelector('[data-value=\"secs\"]');\n    this.start();\n  }\n\n  start() {\n    this.update();\n    this.intervalId = setInterval(() => this.update(), 1000);\n  }\n\n  update() {\n    const now = new Date();\n    const time = this.targetDate - now;\n\n    if (time <= 0) {\n      clearInterval(this.intervalId);\n      this.daysElement.textContent = '0';\n      this.hoursElement.textContent = '00';\n      this.minutesElement.textContent = '00';\n      this.secondsElement.textContent = '00';\n      return;\n    }\n\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const minutes = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((time % (1000 * 60)) / 1000);\n\n    this.daysElement.textContent = days;\n    this.hoursElement.textContent = String(hours).padStart(2, '0');\n    this.minutesElement.textContent = String(minutes).padStart(2, '0');\n    this.secondsElement.textContent = String(seconds).padStart(2, '0');\n  }\n}\n\nnew CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jul 17, 2025'),\n});"],"names":["CountdownTimer","constructor","selector","targetDate","timerElement","document","querySelector","daysElement","hoursElement","minutesElement","secondsElement","start","update","intervalId","setInterval","now","Date","time","clearInterval","textContent","days","Math","floor","hours","minutes","seconds","String","padStart"],"version":3,"file":"hm-12.c58ba43f.js.map"}